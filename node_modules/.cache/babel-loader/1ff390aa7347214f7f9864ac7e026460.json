{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\my-project\\\\src\\\\context\\\\TaskListContext.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nexport const TaskListContext = createContext();\n\nconst TaskListContextProvider = props => {\n  const initialState = JSON.parse(localStorage.getItem('tasks')) || [];\n  /*\r\n  const[tasks,setTasks] =useState([\r\n    //  {title:'Read the book',id:1},\r\n    //  {title:'Wash the car',id:2},\r\n     // {title:'Write some code',id:3},\r\n  ]);\r\n  */\n\n  const [tasks, setTasks] = useState(initialState);\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  const [editItem, setEditItem] = useState(null);\n\n  const addTask = title => {\n    setTasks([...tasks, {\n      title,\n      id: uuidv4()\n    }]);\n  };\n\n  const removeTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const clearList = () => {\n    setTasks([]);\n  };\n\n  const findItem = id => {\n    const item = tasks.find(task => task.id === id);\n    setEditItem(item);\n  };\n\n  const editTask = (title, id) => {\n    const newTasks = tasks.map(task => task.id === id ? {\n      title,\n      id\n    } : task);\n    setTasks(newTasks);\n    setEditItem(null);\n  };\n\n  return /*#__PURE__*/React.createElement(TaskListContext.Provider, {\n    value: {\n      tasks,\n      addTask,\n      removeTask,\n      clearList,\n      findItem,\n      editTask,\n      editItem\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default TaskListContextProvider;","map":{"version":3,"sources":["C:/Users/DELL/my-project/src/context/TaskListContext.js"],"names":["React","createContext","useState","useEffect","v4","uuidv4","TaskListContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","tasks","setTasks","setItem","stringify","editItem","setEditItem","addTask","title","id","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","children"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,aAAd,EAA4BC,QAA5B,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;AAEA,OAAO,MAAMC,eAAe,GAACL,aAAa,EAAnC;;AAGP,MAAMM,uBAAuB,GAAEC,KAAD,IAAS;AAEnC,QAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,KAA6C,EAAlE;AACA;;;;;;;;AAOA,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAkBb,QAAQ,CAACO,YAAD,CAA/B;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,SAAL,CAAeH,KAAf,CAA9B;AACD,GAFM,EAEJ,CAACA,KAAD,CAFI,CAAT;AAGA,QAAK,CAACI,QAAD,EAAUC,WAAV,IAAuBjB,QAAQ,CAAC,IAAD,CAApC;;AACJ,QAAMkB,OAAO,GAACC,KAAK,IAAE;AACnBN,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACO,MAAAA,KAAD;AAAOC,MAAAA,EAAE,EAACjB,MAAM;AAAhB,KAAV,CAAD,CAAR;AACD,GAFD;;AAGA,QAAMkB,UAAU,GAACD,EAAE,IAAE;AACjBP,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAaC,IAAI,IAAEA,IAAI,CAACH,EAAL,KAAUA,EAA7B,CAAD,CAAR;AACH,GAFD;;AAIA,QAAMI,SAAS,GAAC,MAAI;AAChBX,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAFD;;AAGA,QAAMY,QAAQ,GAACL,EAAE,IAAE;AACf,UAAMM,IAAI,GAACd,KAAK,CAACe,IAAN,CAAWJ,IAAI,IAAEA,IAAI,CAACH,EAAL,KAAUA,EAA3B,CAAX;AACAH,IAAAA,WAAW,CAACS,IAAD,CAAX;AACH,GAHD;;AAIA,QAAME,QAAQ,GAAC,CAACT,KAAD,EAAOC,EAAP,KAAY;AACvB,UAAMS,QAAQ,GAACjB,KAAK,CAACkB,GAAN,CAAUP,IAAI,IAAGA,IAAI,CAACH,EAAL,KAAUA,EAAV,GAAa;AAACD,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAAb,GAAwBG,IAAzC,CAAf;AACAV,IAAAA,QAAQ,CAACgB,QAAD,CAAR;AACAZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAJD;;AAKI,sBACA,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAACL,MAAAA,KAAD;AAAOM,MAAAA,OAAP;AAAeG,MAAAA,UAAf;AAA0BG,MAAAA,SAA1B;AAAoCC,MAAAA,QAApC;AAA6CG,MAAAA,QAA7C;AAAsDZ,MAAAA;AAAtD,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCV,KAAK,CAACyB,QADP,CADA;AAKH,CAvCD;;AAyCA,eAAe1B,uBAAf","sourcesContent":["import React,{createContext,useState,useEffect} from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nexport const TaskListContext=createContext()\r\n\r\n\r\nconst TaskListContextProvider=(props)=>{\r\n\r\n    const initialState = JSON.parse(localStorage.getItem('tasks')) || []\r\n    /*\r\n   const[tasks,setTasks] =useState([\r\n      //  {title:'Read the book',id:1},\r\n      //  {title:'Wash the car',id:2},\r\n       // {title:'Write some code',id:3},\r\n    ]);\r\n    */\r\n    const[tasks,setTasks] =useState(initialState);\r\n    useEffect(() => {\r\n        localStorage.setItem('tasks', JSON.stringify(tasks))\r\n      }, [tasks])\r\n    const[editItem,setEditItem]=useState(null)\r\nconst addTask=title=>{\r\n  setTasks([...tasks,{title,id:uuidv4()}])\r\n}\r\nconst removeTask=id=>{\r\n    setTasks(tasks.filter(task=>task.id!==id))\r\n}\r\n\r\nconst clearList=()=>{\r\n    setTasks([]);\r\n}\r\nconst findItem=id=>{\r\n    const item=tasks.find(task=>task.id===id)\r\n    setEditItem(item)\r\n}\r\nconst editTask=(title,id)=>{\r\n    const newTasks=tasks.map(task=>(task.id===id?{title,id}:task));\r\n    setTasks(newTasks)\r\n    setEditItem(null)\r\n}\r\n    return (\r\n    <TaskListContext.Provider value={{tasks,addTask,removeTask,clearList,findItem,editTask,editItem}}>\r\n    {props.children}\r\n    </TaskListContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TaskListContextProvider;"]},"metadata":{},"sourceType":"module"}